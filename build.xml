<?xml version="1.0" encoding="UTF-8"?>
<project name="Moxie" default="main" xmlns:mx="antlib:org.moxie">

	<!--
	Build all Moxie projects.

	Because we are bootstrapping Moxie (building Moxie with Moxie) we have
	to use a traditional, more complex ANT build strategy.
	-->
	<target name="main">
		<!-- Build Toolkit first because other projects use built artifacts -->
		<subant buildpath="${basedir}/toolkit" failonerror="true" />

		<!-- Build remaining projects -->
		<subant buildpath="${basedir}/maxml" failonerror="true" />
		<subant buildpath="${basedir}/moxie+ant" failonerror="true" />
		<subant buildpath="${basedir}/proxy" failonerror="true" />
		<subant buildpath="${basedir}/common" failonerror="true" />
		<subant buildpath="${basedir}/site" failonerror="true" />
		
		<!-- Update IntelliJ IDEA .idea folder -->
		<taskdef uri="antlib:org.moxie">
			<classpath location="${basedir}/toolkit/build/target/moxie.jar" />
		</taskdef>
		<mx:init />
		
	</target>

	<!--
	Release a new version and prepare for the next development cycle.
	-->
	<target name="tagRelease">
	    <taskdef uri="antlib:org.moxie">
			<classpath location="${basedir}/toolkit/build/target/moxie.jar" />
		</taskdef>
		
		<mx:init />
		
		<!-- release -->
		<property name="dryrun" value="false" />
		<mx:version stage="release" dryrun="${dryrun}" />
		<property name="project.tag" value="v${project.version}" />
		<!-- commit build.moxie & releases.moxie (automatic) -->
		<mx:commit showtitle="no">
		    <message>Prepare ${project.version} release</message>
			<tag name="${project.tag}">
				<message>${project.name} ${project.version} release</message>
			</tag>
		</mx:commit>

		<!-- create the release process script -->
		<mx:if>
			<os family="windows" />
			<then>
				<!-- Windows PowerShell script        -->
				<!-- set-executionpolicy remotesigned -->
				<property name="recipe" value="release_${project.version}.ps1" />
			</then>
			<else>
				<!-- Bash script -->
				<property name="recipe" value="release_${project.version}.sh" />
			</else>
		</mx:if>
		<delete file="${recipe}" failonerror="false" quiet="true" verbose="false" />
		<!-- Work-around for lack of proper ant property substitution in copy -->
		<property name="dollar" value="$"/>
		<copy file="release.template" tofile="${recipe}">
			<filterset begintoken="${dollar}{" endtoken="}">
				<filter token="project.version" value="${project.version}" />
				<filter token="project.commitId" value="${project.commitId}" />
				<filter token="project.tag" value="${project.tag}" />
			</filterset>
		</copy>
		<chmod file="${recipe}" perm="ugo+rx" />

		<!-- next cycle -->
		<mx:version stage="snapshot" incrementNumber="incremental" dryrun="${dryrun}" />
		<mx:commit showtitle="no">
		    <message>Reset build identifiers for next development cycle</message>
		</mx:commit>
	</target>
	
	<!--
	Upload artifacts to the remote Maven repository.
	-->
	<target name="uploadArtifacts">
		<taskdef uri="antlib:org.moxie">
			<classpath location="${basedir}/toolkit/build/target/moxie.jar" />
		</taskdef>
		
		<mx:init />

		<mx:ftp server="${ftp.server}" userid="${ftp.user}" password="${ftp.password}"
			remotedir="${ftp.maven.dir}" verbose="yes" depends="yes" timediffauto="true"
			preservelastmodified="true">
			<fileset dir="${basedir}/maven">
				<!-- exclude root files -->
				<exclude name="*.md" />
				<exclude name=".git*" />
			</fileset>
		</mx:ftp>
	</target>

</project>
