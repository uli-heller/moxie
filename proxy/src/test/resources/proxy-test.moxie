# On which port to serve web interface
httpPort : 8080

# On which port to proxy Maven client requests
proxyPort : 8081

# Base folder for all artifacts, metadata, etc
rootFolder : moxie

# Local artifact repositories relative to rootFolder
localRepositories :
- releases
- snapshots

# Remote Maven 2 Repositories which will be proxied on-demand
remoteRepositories :
- { id: central, url: "http://repo1.maven.org/maven2" }
- {	id: restlet, url: "http://maven.restlet.org" }

# Enable the Restlet access log
accessLog : false

# Date format to use in artifact listings
dateFormat : MMM dd, yyyy

# Configure your network proxy
proxies :
- { active: false, id: myproxy, protocol: http, host: "proxy.somewhere.com", port:8080, username: "proxyuser", password: "somepassword" }

#
# Proxy server settings
#

# Sometimes, you want maven to download a file from a different place. For
# example the closest Maven mirror. You can do this by configuring <mirror>s
# in settings.xml. But this doesn't work if the mirror IDs (from
# settings.xml) and the repository IDs (from pom.xml) don't match.
# Or what do you do if the POM says to download 
redirects :

# Redirect all requests to central to the closest mirror
- { from: "http://repo1.maven.org/maven2", to: "http://maven.sateh.com/maven2" }

# Sometimes, a POM will ask for a file from a mirror. In this case, direct
# the requests to the closest mirror.
- { from: "http://www.ibiblio.org/maven2", to: "http://maven.sateh.com/maven2" }

# These two directories on the server always contain the same content (on
# the server, one is a soft link to the other). We don't want to cache the
# same files twice.
- { from: "http://maven.sateh.com/repository", to: "http://maven.sateh.com/maven2" }

# POM bugfixes
# spring-javaconfig believes it has to download releases from m2.safehaus.org.
# Also it uses the wrong path for aopalliance (org.aopalliance instead of aopalliance).
# So we redirect requests for "org/aopalliance" to "aopalliance" and then
# everything else to the root of the mirror
- { from: "http://m2.safehaus.org/org/aopalliance", to: "http://maven.sateh.com/maven2/aopalliance" }
- { from: "http://m2.safehaus.org", to: "http://maven.sateh.com/maven2" }

# Sometimes, you just need to use snapshots. But most of the time, you just
# want a very specific snapshot, not *all* of them. With deny/allow, you
# can control what Maven can see and what it can't.
#   
# First, we allow to download the deploy plugin.
# Next, we deny access to any other snapshot plugin on people.apache.org.
allow :
- http://people.apache.org/maven-snapshot-repository/org/apache/maven/plugins/maven-deploy-plugin/
deny :
- http://people.apache.org/maven-snapshot-repository/org/apache/maven/plugins/